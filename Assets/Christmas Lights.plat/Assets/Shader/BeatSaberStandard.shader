Shader "BeatSaber/Standard" {
	Properties {
		_GlowTex ("Glow Map", 2D) = "white" {}
		_Color ("Color", Vector) = (1,1,1,1)
		_MainTex ("Albedo", 2D) = "white" {}
		[NoScaleOffset] _NormalTex ("Normal Map", 2D) = "bump" {}
		_BumpScale ("Bump Scale", Float) = 1
		_Scale ("Rimlight Scale", Range(0, 5)) = 4
		_Power ("Rimlight Power", Range(0, 10)) = 4
		_Ambient ("Ambient", Range(0, 1)) = 0
		_LightIntensity ("Light Intensity", Float) = 1
		_LightDir ("Light Direction", Vector) = (0,-1,-2,0)
		[NoScaleOffset] _MetalTex ("Metallic", 2D) = "white" {}
		[Gamma] _Metallic ("Metallic", Range(0, 1)) = 0
		_Smoothness ("Smoothness", Range(0, 1)) = 0.5
	}
	SubShader {
		Tags { "IGNOREPROJECTOR" = "true" "QUEUE" = "Transparent" "RenderType" = "Transparent" }
		GrabPass {
		}
		Pass {
			Tags { "IGNOREPROJECTOR" = "true" "QUEUE" = "Transparent" "RenderType" = "Transparent" }
			GpuProgramID 63119
			Program "vp" {
				SubProgram "d3d11 " {
					"!!vs_4_0
					
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// NORMAL                   0   xyz         4     NONE   float   xyz 
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[8], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add r0.xyz, -r0.xyzx, cb1[4].xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
					mul r2.xyz, r1.xwyx, l(0.500000, 0.500000, -0.500000, 0.000000)
					mov o2.zw, r1.zzzw
					add o2.xy, r2.yyyy, r2.xzxx
					mul r1.xyz, v1.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v1.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul o3.xyz, r0.wwww, r1.xyzx
					mov o3.w, v1.w
					dp3 r1.x, v2.xyzx, cb2[4].xyzx
					dp3 r1.y, v2.xyzx, cb2[5].xyzx
					dp3 r1.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul o4.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					mul r0.xyz, cb2[5].xyzx, cb3[13].yyyy
					mad r0.xyz, cb2[4].xyzx, cb3[13].xxxx, r0.xyzx
					mad r0.xyz, cb2[6].xyzx, cb3[13].zzzz, r0.xyzx
					mad r0.xyz, cb2[7].xyzx, cb3[13].wwww, r0.xyzx
					dp3 r0.x, r0.xyzx, v2.xyzx
					mul r1.xyz, cb2[5].xyzx, cb3[14].yyyy
					mad r1.xyz, cb2[4].xyzx, cb3[14].xxxx, r1.xyzx
					mad r1.xyz, cb2[6].xyzx, cb3[14].zzzz, r1.xyzx
					mad r1.xyz, cb2[7].xyzx, cb3[14].wwww, r1.xyzx
					dp3 r0.y, r1.xyzx, v2.xyzx
					mul r1.xyz, cb2[5].xyzx, cb3[15].yyyy
					mad r1.xyz, cb2[4].xyzx, cb3[15].xxxx, r1.xyzx
					mad r1.xyz, cb2[6].xyzx, cb3[15].zzzz, r1.xyzx
					mad r1.xyz, cb2[7].xyzx, cb3[15].wwww, r1.xyzx
					dp3 r0.z, r1.xyzx, v2.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o6.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" }
					"!!vs_4_0
					
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// NORMAL                   0   xyz         4     NONE   float   xyz 
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[8], immediateIndexed
					dcl_constantbuffer CB2[68], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.w + 25].xyzw
					mad r2.xyzw, cb2[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb2[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
					mul r2.xyz, r1.xwyx, l(0.500000, 0.500000, -0.500000, 0.000000)
					add r1.xy, r2.yyyy, r2.xzxx
					mov r2.x, cb3[0].x
					mul r2.yz, r1.wwww, cb2[r2.x + 66].zzwz
					mov o2.zw, r1.zzzw
					mad o2.xy, r1.xyxx, cb2[r2.x + 66].xyxx, r2.yzyy
					add r0.xyz, -r0.xyzx, cb2[r2.x + 64].xyzx
					mul r1.xyz, v1.yyyy, cb1[1].xyzx
					mad r1.xyz, cb1[0].xyzx, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].xyzx, v1.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o3.xyz, r1.wwww, r1.xyzx
					mov o3.w, v1.w
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o4.xyz, r1.wwww, r1.xyzx
					dp3 r1.x, r0.xyzx, r0.xyzx
					rsq r1.x, r1.x
					mul o5.xyz, r0.xyzx, r1.xxxx
					mul r0.xyz, cb1[5].xyzx, cb2[r0.w + 16].yyyy
					mad r0.xyz, cb1[4].xyzx, cb2[r0.w + 16].xxxx, r0.xyzx
					mad r0.xyz, cb1[6].xyzx, cb2[r0.w + 16].zzzz, r0.xyzx
					mad r0.xyz, cb1[7].xyzx, cb2[r0.w + 16].wwww, r0.xyzx
					dp3 r0.x, r0.xyzx, v2.xyzx
					mul r1.xyz, cb1[5].xyzx, cb2[r0.w + 17].yyyy
					mad r1.xyz, cb1[4].xyzx, cb2[r0.w + 17].xxxx, r1.xyzx
					mad r1.xyz, cb1[6].xyzx, cb2[r0.w + 17].zzzz, r1.xyzx
					mad r1.xyz, cb1[7].xyzx, cb2[r0.w + 17].wwww, r1.xyzx
					dp3 r0.y, r1.xyzx, v2.xyzx
					mul r1.xyz, cb1[5].xyzx, cb2[r0.w + 18].yyyy
					mad r1.xyz, cb1[4].xyzx, cb2[r0.w + 18].xxxx, r1.xyzx
					mad r1.xyz, cb1[6].xyzx, cb2[r0.w + 18].zzzz, r1.xyzx
					mad r1.xyz, cb1[7].xyzx, cb2[r0.w + 18].wwww, r1.xyzx
					dp3 r0.z, r1.xyzx, v2.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o6.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_GLOW" }
					"!!vs_4_0
					
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// NORMAL                   0   xyz         4     NONE   float   xyz 
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[8], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add r0.xyz, -r0.xyzx, cb1[4].xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
					mul r2.xyz, r1.xwyx, l(0.500000, 0.500000, -0.500000, 0.000000)
					mov o2.zw, r1.zzzw
					add o2.xy, r2.yyyy, r2.xzxx
					mul r1.xyz, v1.yyyy, cb2[1].xyzx
					mad r1.xyz, cb2[0].xyzx, v1.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].xyzx, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul o3.xyz, r0.wwww, r1.xyzx
					mov o3.w, v1.w
					dp3 r1.x, v2.xyzx, cb2[4].xyzx
					dp3 r1.y, v2.xyzx, cb2[5].xyzx
					dp3 r1.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul o4.xyz, r0.wwww, r1.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o5.xyz, r0.wwww, r0.xyzx
					mul r0.xyz, cb2[5].xyzx, cb3[13].yyyy
					mad r0.xyz, cb2[4].xyzx, cb3[13].xxxx, r0.xyzx
					mad r0.xyz, cb2[6].xyzx, cb3[13].zzzz, r0.xyzx
					mad r0.xyz, cb2[7].xyzx, cb3[13].wwww, r0.xyzx
					dp3 r0.x, r0.xyzx, v2.xyzx
					mul r1.xyz, cb2[5].xyzx, cb3[14].yyyy
					mad r1.xyz, cb2[4].xyzx, cb3[14].xxxx, r1.xyzx
					mad r1.xyz, cb2[6].xyzx, cb3[14].zzzz, r1.xyzx
					mad r1.xyz, cb2[7].xyzx, cb3[14].wwww, r1.xyzx
					dp3 r0.y, r1.xyzx, v2.xyzx
					mul r1.xyz, cb2[5].xyzx, cb3[15].yyyy
					mad r1.xyz, cb2[4].xyzx, cb3[15].xxxx, r1.xyzx
					mad r1.xyz, cb2[6].xyzx, cb3[15].zzzz, r1.xyzx
					mad r1.xyz, cb2[7].xyzx, cb3[15].wwww, r1.xyzx
					dp3 r0.z, r1.xyzx, v2.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o6.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" "_GLOW" }
					"!!vs_4_0
					
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// NORMAL                   0   xyz         4     NONE   float   xyz 
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[8], immediateIndexed
					dcl_constantbuffer CB2[68], dynamicIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					ishl r0.w, cb3[0].x, l(2)
					mul r2.xyzw, r1.yyyy, cb2[r0.w + 25].xyzw
					mad r2.xyzw, cb2[r0.w + 24].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[r0.w + 26].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb2[r0.w + 27].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
					mul r2.xyz, r1.xwyx, l(0.500000, 0.500000, -0.500000, 0.000000)
					add r1.xy, r2.yyyy, r2.xzxx
					mov r2.x, cb3[0].x
					mul r2.yz, r1.wwww, cb2[r2.x + 66].zzwz
					mov o2.zw, r1.zzzw
					mad o2.xy, r1.xyxx, cb2[r2.x + 66].xyxx, r2.yzyy
					add r0.xyz, -r0.xyzx, cb2[r2.x + 64].xyzx
					mul r1.xyz, v1.yyyy, cb1[1].xyzx
					mad r1.xyz, cb1[0].xyzx, v1.xxxx, r1.xyzx
					mad r1.xyz, cb1[2].xyzx, v1.zzzz, r1.xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o3.xyz, r1.wwww, r1.xyzx
					mov o3.w, v1.w
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o4.xyz, r1.wwww, r1.xyzx
					dp3 r1.x, r0.xyzx, r0.xyzx
					rsq r1.x, r1.x
					mul o5.xyz, r0.xyzx, r1.xxxx
					mul r0.xyz, cb1[5].xyzx, cb2[r0.w + 16].yyyy
					mad r0.xyz, cb1[4].xyzx, cb2[r0.w + 16].xxxx, r0.xyzx
					mad r0.xyz, cb1[6].xyzx, cb2[r0.w + 16].zzzz, r0.xyzx
					mad r0.xyz, cb1[7].xyzx, cb2[r0.w + 16].wwww, r0.xyzx
					dp3 r0.x, r0.xyzx, v2.xyzx
					mul r1.xyz, cb1[5].xyzx, cb2[r0.w + 17].yyyy
					mad r1.xyz, cb1[4].xyzx, cb2[r0.w + 17].xxxx, r1.xyzx
					mad r1.xyz, cb1[6].xyzx, cb2[r0.w + 17].zzzz, r1.xyzx
					mad r1.xyz, cb1[7].xyzx, cb2[r0.w + 17].wwww, r1.xyzx
					dp3 r0.y, r1.xyzx, v2.xyzx
					mul r1.xyz, cb1[5].xyzx, cb2[r0.w + 18].yyyy
					mad r1.xyz, cb1[4].xyzx, cb2[r0.w + 18].xxxx, r1.xyzx
					mad r1.xyz, cb1[6].xyzx, cb2[r0.w + 18].zzzz, r1.xyzx
					mad r1.xyz, cb1[7].xyzx, cb2[r0.w + 18].wwww, r1.xyzx
					dp3 r0.z, r1.xyzx, v2.xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o6.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!ps_4_0
					
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xy w
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// NORMAL                   0   xyz         4     NONE   float   xyz 
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 9
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r0.z, r0.xyxx, r0.xyxx
					min r0.z, r0.z, l(1.000000)
					add r0.z, -r0.z, l(1.000000)
					sqrt r0.z, r0.z
					mul r0.w, v3.y, v4.z
					mad r0.w, v4.y, v3.z, -r0.w
					mul r0.w, r0.w, v3.w
					mul r1.xyz, r0.xxxx, v3.xyzx
					mad r2.xyz, r0.yyyy, r0.wwww, r1.xyzx
					mad r2.xyz, r0.zzzz, v4.xyzx, r2.xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r0.x, v3.y, v6.z
					mad r0.x, v6.y, v3.z, -r0.x
					mul r0.x, r0.x, v3.w
					mad r0.xyw, r0.yyyy, r0.xxxx, r1.xyxz
					mad r0.xyz, r0.zzzz, v6.xyzx, r0.xywx
					dp3 r0.z, r0.xyzx, r0.xyzx
					rsq r0.z, r0.z
					mul r1.xy, r0.zzzz, r0.xyxx
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v5.xyzx
					add r4.xw, -cb0[6].zzzz, l(1.000000, 0.000000, 0.000000, 1.000000)
					mad r0.w, r0.x, r0.z, r4.x
					mul r0.w, r0.w, cb0[10].x
					mad r5.x, r0.w, l(50.000000), v2.x
					mad r0.w, -r0.y, r0.z, -r4.x
					mul r0.w, r0.w, cb0[10].y
					mad r5.y, r0.w, l(50.000000), v2.y
					div r1.zw, r5.xxxy, v2.wwww
					sample r6.xyzw, r1.zwzz, t1.xyzw, s3
					mul r0.w, -r1.y, cb0[10].y
					mad r5.z, r0.w, l(50.000000), v2.y
					div r1.yz, r5.xxzx, v2.wwww
					sample r7.xyzw, r1.yzyy, t1.xyzw, s3
					mul r1.yzw, r7.xxyz, l(0.000000, 0.100000, 0.100000, 0.100000)
					mad r1.yzw, r6.xxyz, l(0.000000, 0.050000, 0.050000, 0.050000), r1.yyzw
					mad r0.y, -r0.y, r0.z, r4.x
					mul r0.y, r0.y, cb0[10].y
					mad r5.w, r0.y, l(50.000000), v2.y
					div r0.yw, r5.xxxw, v2.wwww
					sample r6.xyzw, r0.ywyy, t1.xyzw, s3
					mad r1.yzw, r6.xxyz, l(0.000000, 0.110000, 0.110000, 0.110000), r1.yyzw
					mul r0.y, r1.x, cb0[10].x
					mad r5.x, r0.y, l(50.000000), v2.x
					div r6.xyzw, r5.xyxz, v2.wwww
					sample r7.xyzw, r6.xyxx, t1.xyzw, s3
					mad r1.xyz, r7.xyzx, l(0.150000, 0.150000, 0.150000, 0.000000), r1.yzwy
					sample r6.xyzw, r6.zwzz, t1.xyzw, s3
					mad r1.xyz, r6.xyzx, l(0.180000, 0.180000, 0.180000, 0.000000), r1.xyzx
					div r0.yw, r5.xxxw, v2.wwww
					sample r6.xyzw, r0.ywyy, t1.xyzw, s3
					mad r1.xyz, r6.xyzx, l(0.150000, 0.150000, 0.150000, 0.000000), r1.xyzx
					mad r0.x, r0.x, r0.z, -r4.x
					mul r0.x, r0.x, cb0[10].x
					mad r5.x, r0.x, l(50.000000), v2.x
					div r0.xyzw, r5.xyxz, v2.wwww
					sample r6.xyzw, r0.xyxx, t1.xyzw, s3
					mad r1.xyz, r6.xyzx, l(0.110000, 0.110000, 0.110000, 0.000000), r1.xyzx
					sample r0.xyzw, r0.zwzz, t1.xyzw, s3
					mad r0.xyz, r0.xyzx, l(0.100000, 0.100000, 0.100000, 0.000000), r1.xyzx
					div r1.xy, r5.xwxx, v2.wwww
					sample r1.xyzw, r1.xyxx, t1.xyzw, s3
					mad r0.xyz, r1.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000), r0.xyzx
					mul r1.xy, cb0[10].zwzz, l(0.250000, 0.250000, 0.000000, 0.000000)
					mov r5.xyz, l(0,0,0,0)
					mov r0.w, l(0)
					loop 
					  ige r1.z, r0.w, l(3)
					  breakc_nz r1.z
					  itof r1.z, r0.w
					  add r1.z, r1.z, l(1.000000)
					  mul r6.x, r1.z, r1.x
					  mov r7.xyz, r5.xyzx
					  mov r1.z, l(0)
					  loop 
					    ige r1.w, r1.z, l(3)
					    breakc_nz r1.w
					    itof r1.w, r1.z
					    add r1.w, r1.w, l(1.000000)
					    mul r6.y, r1.w, r1.y
					    div r6.yz, r6.xxyx, cb0[10].wwww
					    sample r8.xyzw, r6.yzyy, t1.xyzw, s3
					    mad r7.xyz, r8.xyzx, l(0.111111, 0.111111, 0.111111, 0.000000), r7.xyzx
					    iadd r1.z, r1.z, l(1)
					  endloop 
					  mov r5.xyz, r7.xyzx
					  iadd r0.w, r0.w, l(1)
					endloop 
					mul r1.xyz, r5.xyzx, cb0[7].xxxx
					dp3 r0.w, r3.xyzx, r2.xyzx
					add r1.w, -r0.w, l(1.000000)
					log r1.w, r1.w
					mul r1.w, r1.w, cb0[9].y
					exp r1.w, r1.w
					mul r1.w, r1.w, cb0[9].x
					dp3 r2.w, cb0[8].xyzx, cb0[8].xyzx
					rsq r2.w, r2.w
					mul r5.xyz, r2.wwww, cb0[8].xyzx
					sample r6.xyzw, v1.xyxx, t2.xyzw, s1
					mul r2.w, r6.x, cb0[4].x
					mad r6.xyz, r6.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r6.xyz, cb0[6].yyyy, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r3.w, -cb0[6].y, l(0.779084), l(0.779084)
					mul r2.w, r2.w, r3.w
					mul r7.xyz, r1.xyzx, cb0[6].wwww
					add r4.x, r0.w, r0.w
					mad r3.xyz, r2.xyzx, -r4.xxxx, r3.xyzx
					dp3_sat r2.x, r2.xyzx, -r5.xyzx
					mov_sat r0.w, r0.w
					dp3 r5.x, r3.xyzx, -r5.xyzx
					add r5.y, -r0.w, l(1.000000)
					mul r5.zw, r5.xxxy, r5.xxxy
					mul r2.yz, r5.xxyx, r5.xxwx
					mul r4.yz, r5.zzyz, r2.yyzy
					add r0.w, -r3.w, l(1.000000)
					add_sat r0.w, r0.w, cb0[6].z
					sample r3.xyzw, r4.ywyy, t3.xyzw, s0
					mul r2.y, r3.x, l(16.000000)
					mad r3.xyz, r2.yyyy, r6.xyzx, r2.wwww
					mul r1.xyz, r1.xyzx, r2.xxxx
					add r2.xyz, -r6.xyzx, r0.wwww
					mad r2.xyz, r4.zzzz, r2.xyzx, r6.xyzx
					mul r2.xyz, r2.xyzx, r7.xyzx
					mad r2.xyz, r7.xyzx, r2.wwww, r2.xyzx
					mad r1.xyz, r3.xyzx, r1.xyzx, r2.xyzx
					mad o0.xyz, r1.wwww, r0.xyzx, r1.xyzx
					mov o0.w, l(0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" }
					"!!ps_4_0
					
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xy w
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// NORMAL                   0   xyz         4     NONE   float   xyz 
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 9
					sample r0.xyzw, v1.xyxx, t0.xyzw, s2
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r0.z, r0.xyxx, r0.xyxx
					min r0.z, r0.z, l(1.000000)
					add r0.z, -r0.z, l(1.000000)
					sqrt r0.z, r0.z
					mul r0.w, v3.y, v4.z
					mad r0.w, v4.y, v3.z, -r0.w
					mul r0.w, r0.w, v3.w
					mul r1.xyz, r0.xxxx, v3.xyzx
					mad r2.xyz, r0.yyyy, r0.wwww, r1.xyzx
					mad r2.xyz, r0.zzzz, v4.xyzx, r2.xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r0.x, v3.y, v6.z
					mad r0.x, v6.y, v3.z, -r0.x
					mul r0.x, r0.x, v3.w
					mad r0.xyw, r0.yyyy, r0.xxxx, r1.xyxz
					mad r0.xyz, r0.zzzz, v6.xyzx, r0.xywx
					dp3 r0.z, r0.xyzx, r0.xyzx
					rsq r0.z, r0.z
					mul r1.xy, r0.zzzz, r0.xyxx
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v5.xyzx
					add r4.xw, -cb0[6].zzzz, l(1.000000, 0.000000, 0.000000, 1.000000)
					mad r0.w, r0.x, r0.z, r4.x
					mul r0.w, r0.w, cb0[10].x
					mad r5.x, r0.w, l(50.000000), v2.x
					mad r0.w, -r0.y, r0.z, -r4.x
					mul r0.w, r0.w, cb0[10].y
					mad r5.y, r0.w, l(50.000000), v2.y
					div r1.zw, r5.xxxy, v2.wwww
					sample r6.xyzw, r1.zwzz, t1.xyzw, s3
					mul r0.w, -r1.y, cb0[10].y
					mad r5.z, r0.w, l(50.000000), v2.y
					div r1.yz, r5.xxzx, v2.wwww
					sample r7.xyzw, r1.yzyy, t1.xyzw, s3
					mul r1.yzw, r7.xxyz, l(0.000000, 0.100000, 0.100000, 0.100000)
					mad r1.yzw, r6.xxyz, l(0.000000, 0.050000, 0.050000, 0.050000), r1.yyzw
					mad r0.y, -r0.y, r0.z, r4.x
					mul r0.y, r0.y, cb0[10].y
					mad r5.w, r0.y, l(50.000000), v2.y
					div r0.yw, r5.xxxw, v2.wwww
					sample r6.xyzw, r0.ywyy, t1.xyzw, s3
					mad r1.yzw, r6.xxyz, l(0.000000, 0.110000, 0.110000, 0.110000), r1.yyzw
					mul r0.y, r1.x, cb0[10].x
					mad r5.x, r0.y, l(50.000000), v2.x
					div r6.xyzw, r5.xyxz, v2.wwww
					sample r7.xyzw, r6.xyxx, t1.xyzw, s3
					mad r1.xyz, r7.xyzx, l(0.150000, 0.150000, 0.150000, 0.000000), r1.yzwy
					sample r6.xyzw, r6.zwzz, t1.xyzw, s3
					mad r1.xyz, r6.xyzx, l(0.180000, 0.180000, 0.180000, 0.000000), r1.xyzx
					div r0.yw, r5.xxxw, v2.wwww
					sample r6.xyzw, r0.ywyy, t1.xyzw, s3
					mad r1.xyz, r6.xyzx, l(0.150000, 0.150000, 0.150000, 0.000000), r1.xyzx
					mad r0.x, r0.x, r0.z, -r4.x
					mul r0.x, r0.x, cb0[10].x
					mad r5.x, r0.x, l(50.000000), v2.x
					div r0.xyzw, r5.xyxz, v2.wwww
					sample r6.xyzw, r0.xyxx, t1.xyzw, s3
					mad r1.xyz, r6.xyzx, l(0.110000, 0.110000, 0.110000, 0.000000), r1.xyzx
					sample r0.xyzw, r0.zwzz, t1.xyzw, s3
					mad r0.xyz, r0.xyzx, l(0.100000, 0.100000, 0.100000, 0.000000), r1.xyzx
					div r1.xy, r5.xwxx, v2.wwww
					sample r1.xyzw, r1.xyxx, t1.xyzw, s3
					mad r0.xyz, r1.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000), r0.xyzx
					mul r1.xy, cb0[10].zwzz, l(0.250000, 0.250000, 0.000000, 0.000000)
					mov r5.xyz, l(0,0,0,0)
					mov r0.w, l(0)
					loop 
					  ige r1.z, r0.w, l(3)
					  breakc_nz r1.z
					  itof r1.z, r0.w
					  add r1.z, r1.z, l(1.000000)
					  mul r6.x, r1.z, r1.x
					  mov r7.xyz, r5.xyzx
					  mov r1.z, l(0)
					  loop 
					    ige r1.w, r1.z, l(3)
					    breakc_nz r1.w
					    itof r1.w, r1.z
					    add r1.w, r1.w, l(1.000000)
					    mul r6.y, r1.w, r1.y
					    div r6.yz, r6.xxyx, cb0[10].wwww
					    sample r8.xyzw, r6.yzyy, t1.xyzw, s3
					    mad r7.xyz, r8.xyzx, l(0.111111, 0.111111, 0.111111, 0.000000), r7.xyzx
					    iadd r1.z, r1.z, l(1)
					  endloop 
					  mov r5.xyz, r7.xyzx
					  iadd r0.w, r0.w, l(1)
					endloop 
					mul r1.xyz, r5.xyzx, cb0[7].xxxx
					dp3 r0.w, r3.xyzx, r2.xyzx
					add r1.w, -r0.w, l(1.000000)
					log r1.w, r1.w
					mul r1.w, r1.w, cb0[9].y
					exp r1.w, r1.w
					mul r1.w, r1.w, cb0[9].x
					dp3 r2.w, cb0[8].xyzx, cb0[8].xyzx
					rsq r2.w, r2.w
					mul r5.xyz, r2.wwww, cb0[8].xyzx
					sample r6.xyzw, v1.xyxx, t2.xyzw, s1
					mul r2.w, r6.x, cb0[4].x
					mad r6.xyz, r6.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r6.xyz, cb0[6].yyyy, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r3.w, -cb0[6].y, l(0.779084), l(0.779084)
					mul r2.w, r2.w, r3.w
					mul r7.xyz, r1.xyzx, cb0[6].wwww
					add r4.x, r0.w, r0.w
					mad r3.xyz, r2.xyzx, -r4.xxxx, r3.xyzx
					dp3_sat r2.x, r2.xyzx, -r5.xyzx
					mov_sat r0.w, r0.w
					dp3 r5.x, r3.xyzx, -r5.xyzx
					add r5.y, -r0.w, l(1.000000)
					mul r5.zw, r5.xxxy, r5.xxxy
					mul r2.yz, r5.xxyx, r5.xxwx
					mul r4.yz, r5.zzyz, r2.yyzy
					add r0.w, -r3.w, l(1.000000)
					add_sat r0.w, r0.w, cb0[6].z
					sample r3.xyzw, r4.ywyy, t3.xyzw, s0
					mul r2.y, r3.x, l(16.000000)
					mad r3.xyz, r2.yyyy, r6.xyzx, r2.wwww
					mul r1.xyz, r1.xyzx, r2.xxxx
					add r2.xyz, -r6.xyzx, r0.wwww
					mad r2.xyz, r4.zzzz, r2.xyzx, r6.xyzx
					mul r2.xyz, r2.xyzx, r7.xyzx
					mad r2.xyz, r7.xyzx, r2.wwww, r2.xyzx
					mad r1.xyz, r3.xyzx, r1.xyzx, r2.xyzx
					mad o0.xyz, r1.wwww, r0.xyzx, r1.xyzx
					mov o0.w, l(0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_GLOW" }
					"!!ps_4_0
					
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xy w
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// NORMAL                   0   xyz         4     NONE   float   xyz 
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 9
					sample r0.xyzw, v1.xyxx, t0.xyzw, s3
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r0.z, r0.xyxx, r0.xyxx
					min r0.z, r0.z, l(1.000000)
					add r0.z, -r0.z, l(1.000000)
					sqrt r0.z, r0.z
					mul r0.w, v3.y, v4.z
					mad r0.w, v4.y, v3.z, -r0.w
					mul r0.w, r0.w, v3.w
					mul r1.xyz, r0.xxxx, v3.xyzx
					mad r2.xyz, r0.yyyy, r0.wwww, r1.xyzx
					mad r2.xyz, r0.zzzz, v4.xyzx, r2.xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r0.x, v3.y, v6.z
					mad r0.x, v6.y, v3.z, -r0.x
					mul r0.x, r0.x, v3.w
					mad r0.xyw, r0.yyyy, r0.xxxx, r1.xyxz
					mad r0.xyz, r0.zzzz, v6.xyzx, r0.xywx
					dp3 r0.z, r0.xyzx, r0.xyzx
					rsq r0.z, r0.z
					mul r1.xy, r0.zzzz, r0.xyxx
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v5.xyzx
					add r4.xw, -cb0[6].zzzz, l(1.000000, 0.000000, 0.000000, 1.000000)
					mad r0.w, r0.x, r0.z, r4.x
					mul r0.w, r0.w, cb0[10].x
					mad r5.x, r0.w, l(50.000000), v2.x
					mad r0.w, -r0.y, r0.z, -r4.x
					mul r0.w, r0.w, cb0[10].y
					mad r5.y, r0.w, l(50.000000), v2.y
					div r1.zw, r5.xxxy, v2.wwww
					sample r6.xyzw, r1.zwzz, t1.xyzw, s4
					mul r0.w, -r1.y, cb0[10].y
					mad r5.z, r0.w, l(50.000000), v2.y
					div r1.yz, r5.xxzx, v2.wwww
					sample r7.xyzw, r1.yzyy, t1.xyzw, s4
					mul r1.yzw, r7.xxyz, l(0.000000, 0.100000, 0.100000, 0.100000)
					mad r1.yzw, r6.xxyz, l(0.000000, 0.050000, 0.050000, 0.050000), r1.yyzw
					mad r0.y, -r0.y, r0.z, r4.x
					mul r0.y, r0.y, cb0[10].y
					mad r5.w, r0.y, l(50.000000), v2.y
					div r0.yw, r5.xxxw, v2.wwww
					sample r6.xyzw, r0.ywyy, t1.xyzw, s4
					mad r1.yzw, r6.xxyz, l(0.000000, 0.110000, 0.110000, 0.110000), r1.yyzw
					mul r0.y, r1.x, cb0[10].x
					mad r5.x, r0.y, l(50.000000), v2.x
					div r6.xyzw, r5.xyxz, v2.wwww
					sample r7.xyzw, r6.xyxx, t1.xyzw, s4
					mad r1.xyz, r7.xyzx, l(0.150000, 0.150000, 0.150000, 0.000000), r1.yzwy
					sample r6.xyzw, r6.zwzz, t1.xyzw, s4
					mad r1.xyz, r6.xyzx, l(0.180000, 0.180000, 0.180000, 0.000000), r1.xyzx
					div r0.yw, r5.xxxw, v2.wwww
					sample r6.xyzw, r0.ywyy, t1.xyzw, s4
					mad r1.xyz, r6.xyzx, l(0.150000, 0.150000, 0.150000, 0.000000), r1.xyzx
					mad r0.x, r0.x, r0.z, -r4.x
					mul r0.x, r0.x, cb0[10].x
					mad r5.x, r0.x, l(50.000000), v2.x
					div r0.xyzw, r5.xyxz, v2.wwww
					sample r6.xyzw, r0.xyxx, t1.xyzw, s4
					mad r1.xyz, r6.xyzx, l(0.110000, 0.110000, 0.110000, 0.000000), r1.xyzx
					sample r0.xyzw, r0.zwzz, t1.xyzw, s4
					mad r0.xyz, r0.xyzx, l(0.100000, 0.100000, 0.100000, 0.000000), r1.xyzx
					div r1.xy, r5.xwxx, v2.wwww
					sample r1.xyzw, r1.xyxx, t1.xyzw, s4
					mad r0.xyz, r1.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000), r0.xyzx
					mul r1.xy, cb0[10].zwzz, l(0.250000, 0.250000, 0.000000, 0.000000)
					mov r5.xyz, l(0,0,0,0)
					mov r0.w, l(0)
					loop 
					  ige r1.z, r0.w, l(3)
					  breakc_nz r1.z
					  itof r1.z, r0.w
					  add r1.z, r1.z, l(1.000000)
					  mul r6.x, r1.z, r1.x
					  mov r7.xyz, r5.xyzx
					  mov r1.z, l(0)
					  loop 
					    ige r1.w, r1.z, l(3)
					    breakc_nz r1.w
					    itof r1.w, r1.z
					    add r1.w, r1.w, l(1.000000)
					    mul r6.y, r1.w, r1.y
					    div r6.yz, r6.xxyx, cb0[10].wwww
					    sample r8.xyzw, r6.yzyy, t1.xyzw, s4
					    mad r7.xyz, r8.xyzx, l(0.111111, 0.111111, 0.111111, 0.000000), r7.xyzx
					    iadd r1.z, r1.z, l(1)
					  endloop 
					  mov r5.xyz, r7.xyzx
					  iadd r0.w, r0.w, l(1)
					endloop 
					mul r1.xyz, r5.xyzx, cb0[7].xxxx
					dp3 r0.w, r3.xyzx, r2.xyzx
					add r1.w, -r0.w, l(1.000000)
					log r1.w, r1.w
					mul r1.w, r1.w, cb0[9].y
					exp r1.w, r1.w
					mul r1.w, r1.w, cb0[9].x
					dp3 r2.w, cb0[8].xyzx, cb0[8].xyzx
					rsq r2.w, r2.w
					mul r5.xyz, r2.wwww, cb0[8].xyzx
					sample r6.xyzw, v1.xyxx, t2.xyzw, s2
					mul r2.w, r6.x, cb0[4].x
					mad r7.xyz, r6.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r7.xyz, cb0[6].yyyy, r7.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r3.w, -cb0[6].y, l(0.779084), l(0.779084)
					mul r2.w, r2.w, r3.w
					mul r8.xyz, r1.xyzx, cb0[6].wwww
					add r4.x, r0.w, r0.w
					mad r3.xyz, r2.xyzx, -r4.xxxx, r3.xyzx
					dp3_sat r2.x, r2.xyzx, -r5.xyzx
					mov_sat r0.w, r0.w
					dp3 r5.x, r3.xyzx, -r5.xyzx
					add r5.y, -r0.w, l(1.000000)
					mul r5.zw, r5.xxxy, r5.xxxy
					mul r2.yz, r5.xxyx, r5.xxwx
					mul r4.yz, r5.zzyz, r2.yyzy
					add r0.w, -r3.w, l(1.000000)
					add_sat r0.w, r0.w, cb0[6].z
					sample r3.xyzw, r4.ywyy, t3.xyzw, s0
					mul r2.y, r3.x, l(16.000000)
					mad r3.xyz, r2.yyyy, r7.xyzx, r2.wwww
					mul r1.xyz, r1.xyzx, r2.xxxx
					add r2.xyz, -r7.xyzx, r0.wwww
					mad r2.xyz, r4.zzzz, r2.xyzx, r7.xyzx
					mul r2.xyz, r2.xyzx, r8.xyzx
					mad r2.xyz, r8.xyzx, r2.wwww, r2.xyzx
					mad r1.xyz, r3.xyzx, r1.xyzx, r2.xyzx
					mad r0.xyz, r1.wwww, r0.xyzx, r1.xyzx
					sample r1.xyzw, v1.xyxx, t4.xyzw, s1
					mad r1.xzw, r6.xxyz, cb0[4].xxyz, -r0.xxyz
					mad o0.xyz, r1.yyyy, r1.xzwx, r0.xyzx
					mov o0.w, r1.y
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_SINGLE_PASS_STEREO" "_GLOW" }
					"!!ps_4_0
					
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1   xyzw        2     NONE   float   xy w
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// NORMAL                   0   xyz         4     NONE   float   xyz 
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 4   xyz         6     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 9
					sample r0.xyzw, v1.xyxx, t0.xyzw, s3
					mul r0.x, r0.w, r0.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r0.z, r0.xyxx, r0.xyxx
					min r0.z, r0.z, l(1.000000)
					add r0.z, -r0.z, l(1.000000)
					sqrt r0.z, r0.z
					mul r0.w, v3.y, v4.z
					mad r0.w, v4.y, v3.z, -r0.w
					mul r0.w, r0.w, v3.w
					mul r1.xyz, r0.xxxx, v3.xyzx
					mad r2.xyz, r0.yyyy, r0.wwww, r1.xyzx
					mad r2.xyz, r0.zzzz, v4.xyzx, r2.xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r0.x, v3.y, v6.z
					mad r0.x, v6.y, v3.z, -r0.x
					mul r0.x, r0.x, v3.w
					mad r0.xyw, r0.yyyy, r0.xxxx, r1.xyxz
					mad r0.xyz, r0.zzzz, v6.xyzx, r0.xywx
					dp3 r0.z, r0.xyzx, r0.xyzx
					rsq r0.z, r0.z
					mul r1.xy, r0.zzzz, r0.xyxx
					dp3 r0.w, v5.xyzx, v5.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, v5.xyzx
					add r4.xw, -cb0[6].zzzz, l(1.000000, 0.000000, 0.000000, 1.000000)
					mad r0.w, r0.x, r0.z, r4.x
					mul r0.w, r0.w, cb0[10].x
					mad r5.x, r0.w, l(50.000000), v2.x
					mad r0.w, -r0.y, r0.z, -r4.x
					mul r0.w, r0.w, cb0[10].y
					mad r5.y, r0.w, l(50.000000), v2.y
					div r1.zw, r5.xxxy, v2.wwww
					sample r6.xyzw, r1.zwzz, t1.xyzw, s4
					mul r0.w, -r1.y, cb0[10].y
					mad r5.z, r0.w, l(50.000000), v2.y
					div r1.yz, r5.xxzx, v2.wwww
					sample r7.xyzw, r1.yzyy, t1.xyzw, s4
					mul r1.yzw, r7.xxyz, l(0.000000, 0.100000, 0.100000, 0.100000)
					mad r1.yzw, r6.xxyz, l(0.000000, 0.050000, 0.050000, 0.050000), r1.yyzw
					mad r0.y, -r0.y, r0.z, r4.x
					mul r0.y, r0.y, cb0[10].y
					mad r5.w, r0.y, l(50.000000), v2.y
					div r0.yw, r5.xxxw, v2.wwww
					sample r6.xyzw, r0.ywyy, t1.xyzw, s4
					mad r1.yzw, r6.xxyz, l(0.000000, 0.110000, 0.110000, 0.110000), r1.yyzw
					mul r0.y, r1.x, cb0[10].x
					mad r5.x, r0.y, l(50.000000), v2.x
					div r6.xyzw, r5.xyxz, v2.wwww
					sample r7.xyzw, r6.xyxx, t1.xyzw, s4
					mad r1.xyz, r7.xyzx, l(0.150000, 0.150000, 0.150000, 0.000000), r1.yzwy
					sample r6.xyzw, r6.zwzz, t1.xyzw, s4
					mad r1.xyz, r6.xyzx, l(0.180000, 0.180000, 0.180000, 0.000000), r1.xyzx
					div r0.yw, r5.xxxw, v2.wwww
					sample r6.xyzw, r0.ywyy, t1.xyzw, s4
					mad r1.xyz, r6.xyzx, l(0.150000, 0.150000, 0.150000, 0.000000), r1.xyzx
					mad r0.x, r0.x, r0.z, -r4.x
					mul r0.x, r0.x, cb0[10].x
					mad r5.x, r0.x, l(50.000000), v2.x
					div r0.xyzw, r5.xyxz, v2.wwww
					sample r6.xyzw, r0.xyxx, t1.xyzw, s4
					mad r1.xyz, r6.xyzx, l(0.110000, 0.110000, 0.110000, 0.000000), r1.xyzx
					sample r0.xyzw, r0.zwzz, t1.xyzw, s4
					mad r0.xyz, r0.xyzx, l(0.100000, 0.100000, 0.100000, 0.000000), r1.xyzx
					div r1.xy, r5.xwxx, v2.wwww
					sample r1.xyzw, r1.xyxx, t1.xyzw, s4
					mad r0.xyz, r1.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000), r0.xyzx
					mul r1.xy, cb0[10].zwzz, l(0.250000, 0.250000, 0.000000, 0.000000)
					mov r5.xyz, l(0,0,0,0)
					mov r0.w, l(0)
					loop 
					  ige r1.z, r0.w, l(3)
					  breakc_nz r1.z
					  itof r1.z, r0.w
					  add r1.z, r1.z, l(1.000000)
					  mul r6.x, r1.z, r1.x
					  mov r7.xyz, r5.xyzx
					  mov r1.z, l(0)
					  loop 
					    ige r1.w, r1.z, l(3)
					    breakc_nz r1.w
					    itof r1.w, r1.z
					    add r1.w, r1.w, l(1.000000)
					    mul r6.y, r1.w, r1.y
					    div r6.yz, r6.xxyx, cb0[10].wwww
					    sample r8.xyzw, r6.yzyy, t1.xyzw, s4
					    mad r7.xyz, r8.xyzx, l(0.111111, 0.111111, 0.111111, 0.000000), r7.xyzx
					    iadd r1.z, r1.z, l(1)
					  endloop 
					  mov r5.xyz, r7.xyzx
					  iadd r0.w, r0.w, l(1)
					endloop 
					mul r1.xyz, r5.xyzx, cb0[7].xxxx
					dp3 r0.w, r3.xyzx, r2.xyzx
					add r1.w, -r0.w, l(1.000000)
					log r1.w, r1.w
					mul r1.w, r1.w, cb0[9].y
					exp r1.w, r1.w
					mul r1.w, r1.w, cb0[9].x
					dp3 r2.w, cb0[8].xyzx, cb0[8].xyzx
					rsq r2.w, r2.w
					mul r5.xyz, r2.wwww, cb0[8].xyzx
					sample r6.xyzw, v1.xyxx, t2.xyzw, s2
					mul r2.w, r6.x, cb0[4].x
					mad r7.xyz, r6.xyzx, cb0[4].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
					mad r7.xyz, cb0[6].yyyy, r7.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
					mad r3.w, -cb0[6].y, l(0.779084), l(0.779084)
					mul r2.w, r2.w, r3.w
					mul r8.xyz, r1.xyzx, cb0[6].wwww
					add r4.x, r0.w, r0.w
					mad r3.xyz, r2.xyzx, -r4.xxxx, r3.xyzx
					dp3_sat r2.x, r2.xyzx, -r5.xyzx
					mov_sat r0.w, r0.w
					dp3 r5.x, r3.xyzx, -r5.xyzx
					add r5.y, -r0.w, l(1.000000)
					mul r5.zw, r5.xxxy, r5.xxxy
					mul r2.yz, r5.xxyx, r5.xxwx
					mul r4.yz, r5.zzyz, r2.yyzy
					add r0.w, -r3.w, l(1.000000)
					add_sat r0.w, r0.w, cb0[6].z
					sample r3.xyzw, r4.ywyy, t3.xyzw, s0
					mul r2.y, r3.x, l(16.000000)
					mad r3.xyz, r2.yyyy, r7.xyzx, r2.wwww
					mul r1.xyz, r1.xyzx, r2.xxxx
					add r2.xyz, -r7.xyzx, r0.wwww
					mad r2.xyz, r4.zzzz, r2.xyzx, r7.xyzx
					mul r2.xyz, r2.xyzx, r8.xyzx
					mad r2.xyz, r8.xyzx, r2.wwww, r2.xyzx
					mad r1.xyz, r3.xyzx, r1.xyzx, r2.xyzx
					mad r0.xyz, r1.wwww, r0.xyzx, r1.xyzx
					sample r1.xyzw, v1.xyxx, t4.xyzw, s1
					mad r1.xzw, r6.xxyz, cb0[4].xxyz, -r0.xxyz
					mad o0.xyz, r1.yyyy, r1.xzwx, r0.xyzx
					mov o0.w, r1.y
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
	CustomEditor "BsStandardEditor"
}